// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v6.32.0--rc1
// source: session_resp.proto

// 定义包名，这会影响 Go 和其他语言的命名空间

package messages

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SessionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Payload:
	//
	//	*SessionResponse_Join
	//	*SessionResponse_RoomInfoChanged
	//	*SessionResponse_StageChange
	//	*SessionResponse_RoomClosed
	//	*SessionResponse_ReadyCountUpdate
	//	*SessionResponse_LoadedCountUpdate
	//	*SessionResponse_InGameFrames
	//	*SessionResponse_EndGame
	//	*SessionResponse_Other
	Payload isSessionResponse_Payload `protobuf_oneof:"payload"`
}

func (x *SessionResponse) Reset() {
	*x = SessionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_session_resp_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionResponse) ProtoMessage() {}

func (x *SessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_session_resp_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionResponse.ProtoReflect.Descriptor instead.
func (*SessionResponse) Descriptor() ([]byte, []int) {
	return file_session_resp_proto_rawDescGZIP(), []int{0}
}

func (m *SessionResponse) GetPayload() isSessionResponse_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *SessionResponse) GetJoin() *ResponseJoin {
	if x, ok := x.GetPayload().(*SessionResponse_Join); ok {
		return x.Join
	}
	return nil
}

func (x *SessionResponse) GetRoomInfoChanged() *ResponseRoomInfoChanged {
	if x, ok := x.GetPayload().(*SessionResponse_RoomInfoChanged); ok {
		return x.RoomInfoChanged
	}
	return nil
}

func (x *SessionResponse) GetStageChange() *ResponseStageChange {
	if x, ok := x.GetPayload().(*SessionResponse_StageChange); ok {
		return x.StageChange
	}
	return nil
}

func (x *SessionResponse) GetRoomClosed() *ResponseRoomClosed {
	if x, ok := x.GetPayload().(*SessionResponse_RoomClosed); ok {
		return x.RoomClosed
	}
	return nil
}

func (x *SessionResponse) GetReadyCountUpdate() *ResponseReadyCountUpdate {
	if x, ok := x.GetPayload().(*SessionResponse_ReadyCountUpdate); ok {
		return x.ReadyCountUpdate
	}
	return nil
}

func (x *SessionResponse) GetLoadedCountUpdate() *ResponseLoadedCountUpdate {
	if x, ok := x.GetPayload().(*SessionResponse_LoadedCountUpdate); ok {
		return x.LoadedCountUpdate
	}
	return nil
}

func (x *SessionResponse) GetInGameFrames() *ResponseInGameFrames {
	if x, ok := x.GetPayload().(*SessionResponse_InGameFrames); ok {
		return x.InGameFrames
	}
	return nil
}

func (x *SessionResponse) GetEndGame() *ResponseEndGame {
	if x, ok := x.GetPayload().(*SessionResponse_EndGame); ok {
		return x.EndGame
	}
	return nil
}

func (x *SessionResponse) GetOther() *ResponseOther {
	if x, ok := x.GetPayload().(*SessionResponse_Other); ok {
		return x.Other
	}
	return nil
}

type isSessionResponse_Payload interface {
	isSessionResponse_Payload()
}

type SessionResponse_Join struct {
	Join *ResponseJoin `protobuf:"bytes,1,opt,name=join,proto3,oneof"`
}

type SessionResponse_RoomInfoChanged struct {
	RoomInfoChanged *ResponseRoomInfoChanged `protobuf:"bytes,2,opt,name=room_info_changed,json=roomInfoChanged,proto3,oneof"`
}

type SessionResponse_StageChange struct {
	StageChange *ResponseStageChange `protobuf:"bytes,3,opt,name=stage_change,json=stageChange,proto3,oneof"`
}

type SessionResponse_RoomClosed struct {
	RoomClosed *ResponseRoomClosed `protobuf:"bytes,4,opt,name=room_closed,json=roomClosed,proto3,oneof"`
}

type SessionResponse_ReadyCountUpdate struct {
	ReadyCountUpdate *ResponseReadyCountUpdate `protobuf:"bytes,5,opt,name=ready_count_update,json=readyCountUpdate,proto3,oneof"`
}

type SessionResponse_LoadedCountUpdate struct {
	LoadedCountUpdate *ResponseLoadedCountUpdate `protobuf:"bytes,6,opt,name=loaded_count_update,json=loadedCountUpdate,proto3,oneof"`
}

type SessionResponse_InGameFrames struct {
	InGameFrames *ResponseInGameFrames `protobuf:"bytes,7,opt,name=in_game_frames,json=inGameFrames,proto3,oneof"`
}

type SessionResponse_EndGame struct {
	EndGame *ResponseEndGame `protobuf:"bytes,8,opt,name=end_game,json=endGame,proto3,oneof"`
}

type SessionResponse_Other struct {
	Other *ResponseOther `protobuf:"bytes,9,opt,name=other,proto3,oneof"`
}

func (*SessionResponse_Join) isSessionResponse_Payload() {}

func (*SessionResponse_RoomInfoChanged) isSessionResponse_Payload() {}

func (*SessionResponse_StageChange) isSessionResponse_Payload() {}

func (*SessionResponse_RoomClosed) isSessionResponse_Payload() {}

func (*SessionResponse_ReadyCountUpdate) isSessionResponse_Payload() {}

func (*SessionResponse_LoadedCountUpdate) isSessionResponse_Payload() {}

func (*SessionResponse_InGameFrames) isSessionResponse_Payload() {}

func (*SessionResponse_EndGame) isSessionResponse_Payload() {}

func (*SessionResponse_Other) isSessionResponse_Payload() {}

type RoomInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomKey        string   `protobuf:"bytes,2,opt,name=RoomKey,proto3" json:"RoomKey,omitempty"`
	MaxPlayers     int32    `protobuf:"varint,4,opt,name=MaxPlayers,proto3" json:"MaxPlayers,omitempty"`
	CurrentPlayers int32    `protobuf:"varint,5,opt,name=CurrentPlayers,proto3" json:"CurrentPlayers,omitempty"`
	PlayerIDs      []uint32 `protobuf:"varint,6,rep,packed,name=PlayerIDs,proto3" json:"PlayerIDs,omitempty"`
	// 附加数据
	Data []byte `protobuf:"bytes,7,opt,name=data,proto3,oneof" json:"data,omitempty"`
}

func (x *RoomInfo) Reset() {
	*x = RoomInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_session_resp_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomInfo) ProtoMessage() {}

func (x *RoomInfo) ProtoReflect() protoreflect.Message {
	mi := &file_session_resp_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomInfo.ProtoReflect.Descriptor instead.
func (*RoomInfo) Descriptor() ([]byte, []int) {
	return file_session_resp_proto_rawDescGZIP(), []int{1}
}

func (x *RoomInfo) GetRoomKey() string {
	if x != nil {
		return x.RoomKey
	}
	return ""
}

func (x *RoomInfo) GetMaxPlayers() int32 {
	if x != nil {
		return x.MaxPlayers
	}
	return 0
}

func (x *RoomInfo) GetCurrentPlayers() int32 {
	if x != nil {
		return x.CurrentPlayers
	}
	return 0
}

func (x *RoomInfo) GetPlayerIDs() []uint32 {
	if x != nil {
		return x.PlayerIDs
	}
	return nil
}

func (x *RoomInfo) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type ResponseJoinSuccess struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomID         uint32    `protobuf:"varint,1,opt,name=RoomID,proto3" json:"RoomID,omitempty"`
	RoomInfo       *RoomInfo `protobuf:"bytes,4,opt,name=RoomInfo,proto3" json:"RoomInfo,omitempty"`
	MyID           uint32    `protobuf:"varint,2,opt,name=MyID,proto3" json:"MyID,omitempty"`
	ReconnectToken string    `protobuf:"bytes,3,opt,name=ReconnectToken,proto3" json:"ReconnectToken,omitempty"`
}

func (x *ResponseJoinSuccess) Reset() {
	*x = ResponseJoinSuccess{}
	if protoimpl.UnsafeEnabled {
		mi := &file_session_resp_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseJoinSuccess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseJoinSuccess) ProtoMessage() {}

func (x *ResponseJoinSuccess) ProtoReflect() protoreflect.Message {
	mi := &file_session_resp_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseJoinSuccess.ProtoReflect.Descriptor instead.
func (*ResponseJoinSuccess) Descriptor() ([]byte, []int) {
	return file_session_resp_proto_rawDescGZIP(), []int{2}
}

func (x *ResponseJoinSuccess) GetRoomID() uint32 {
	if x != nil {
		return x.RoomID
	}
	return 0
}

func (x *ResponseJoinSuccess) GetRoomInfo() *RoomInfo {
	if x != nil {
		return x.RoomInfo
	}
	return nil
}

func (x *ResponseJoinSuccess) GetMyID() uint32 {
	if x != nil {
		return x.MyID
	}
	return 0
}

func (x *ResponseJoinSuccess) GetReconnectToken() string {
	if x != nil {
		return x.ReconnectToken
	}
	return ""
}

type ResponseJoinFail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *ResponseJoinFail) Reset() {
	*x = ResponseJoinFail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_session_resp_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseJoinFail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseJoinFail) ProtoMessage() {}

func (x *ResponseJoinFail) ProtoReflect() protoreflect.Message {
	mi := &file_session_resp_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseJoinFail.ProtoReflect.Descriptor instead.
func (*ResponseJoinFail) Descriptor() ([]byte, []int) {
	return file_session_resp_proto_rawDescGZIP(), []int{3}
}

func (x *ResponseJoinFail) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ResponseJoin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// status code
	// 200 = success
	// 400 = fail
	Code uint32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// Types that are assignable to Payload:
	//
	//	*ResponseJoin_Success
	//	*ResponseJoin_Fail
	Payload isResponseJoin_Payload `protobuf_oneof:"payload"`
}

func (x *ResponseJoin) Reset() {
	*x = ResponseJoin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_session_resp_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseJoin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseJoin) ProtoMessage() {}

func (x *ResponseJoin) ProtoReflect() protoreflect.Message {
	mi := &file_session_resp_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseJoin.ProtoReflect.Descriptor instead.
func (*ResponseJoin) Descriptor() ([]byte, []int) {
	return file_session_resp_proto_rawDescGZIP(), []int{4}
}

func (x *ResponseJoin) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (m *ResponseJoin) GetPayload() isResponseJoin_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *ResponseJoin) GetSuccess() *ResponseJoinSuccess {
	if x, ok := x.GetPayload().(*ResponseJoin_Success); ok {
		return x.Success
	}
	return nil
}

func (x *ResponseJoin) GetFail() *ResponseJoinFail {
	if x, ok := x.GetPayload().(*ResponseJoin_Fail); ok {
		return x.Fail
	}
	return nil
}

type isResponseJoin_Payload interface {
	isResponseJoin_Payload()
}

type ResponseJoin_Success struct {
	Success *ResponseJoinSuccess `protobuf:"bytes,2,opt,name=success,proto3,oneof"`
}

type ResponseJoin_Fail struct {
	Fail *ResponseJoinFail `protobuf:"bytes,3,opt,name=fail,proto3,oneof"`
}

func (*ResponseJoin_Success) isResponseJoin_Payload() {}

func (*ResponseJoin_Fail) isResponseJoin_Payload() {}

type ResponseRoomInfoChanged struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomInfo *RoomInfo `protobuf:"bytes,1,opt,name=room_info,json=roomInfo,proto3" json:"room_info,omitempty"`
}

func (x *ResponseRoomInfoChanged) Reset() {
	*x = ResponseRoomInfoChanged{}
	if protoimpl.UnsafeEnabled {
		mi := &file_session_resp_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseRoomInfoChanged) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseRoomInfoChanged) ProtoMessage() {}

func (x *ResponseRoomInfoChanged) ProtoReflect() protoreflect.Message {
	mi := &file_session_resp_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseRoomInfoChanged.ProtoReflect.Descriptor instead.
func (*ResponseRoomInfoChanged) Descriptor() ([]byte, []int) {
	return file_session_resp_proto_rawDescGZIP(), []int{5}
}

func (x *ResponseRoomInfoChanged) GetRoomInfo() *RoomInfo {
	if x != nil {
		return x.RoomInfo
	}
	return nil
}

type ResponseRoomClosed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reason string `protobuf:"bytes,1,opt,name=Reason,proto3" json:"Reason,omitempty"`
}

func (x *ResponseRoomClosed) Reset() {
	*x = ResponseRoomClosed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_session_resp_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseRoomClosed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseRoomClosed) ProtoMessage() {}

func (x *ResponseRoomClosed) ProtoReflect() protoreflect.Message {
	mi := &file_session_resp_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseRoomClosed.ProtoReflect.Descriptor instead.
func (*ResponseRoomClosed) Descriptor() ([]byte, []int) {
	return file_session_resp_proto_rawDescGZIP(), []int{6}
}

func (x *ResponseRoomClosed) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

// 通知客户端房间阶段变更
// 响应体使用不同的NewStage字段而非不同的响应类型，以方便客户端分支处理
type ResponseStageChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 新字段的常量
	// STAGE_InLobby   Stage = 0x20 // InLobby (房间.等待中): 房间刚被创建,所有人还在房间中，等待玩家加入，房主可以设置游戏。
	// STAGE_Preparing Stage = 0x21 // Preparing (房间.准备中): 房主已发起游戏，所有玩家选择装备并确认准备。
	// STAGE_Loading   Stage = 0x22 // Loading (游戏.加载中): 游戏开始前的加载阶段，所有玩家准备完毕后进入 InGame。
	// STAGE_InGame    Stage = 0x23 // InGame (游戏.游戏中): 所有玩家准备就绪，游戏正式开始，由定时器驱动逻辑。
	// STAGE_PostGame  Stage = 0x24 // PostGame (游戏.游戏后结算): 游戏结束，显示战绩，等待返回大厅。
	// STAGE_CLOSED Stage = 0xEE
	// STAGE_Error  Stage = 0xFF
	NewStage uint32 `protobuf:"varint,1,opt,name=NewStage,proto3" json:"NewStage,omitempty"`
	// 可以携带更多的数据
	// 本框架自身不用此字段
	Data []byte `protobuf:"bytes,2,opt,name=data,proto3,oneof" json:"data,omitempty"`
}

func (x *ResponseStageChange) Reset() {
	*x = ResponseStageChange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_session_resp_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseStageChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseStageChange) ProtoMessage() {}

func (x *ResponseStageChange) ProtoReflect() protoreflect.Message {
	mi := &file_session_resp_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseStageChange.ProtoReflect.Descriptor instead.
func (*ResponseStageChange) Descriptor() ([]byte, []int) {
	return file_session_resp_proto_rawDescGZIP(), []int{7}
}

func (x *ResponseStageChange) GetNewStage() uint32 {
	if x != nil {
		return x.NewStage
	}
	return 0
}

func (x *ResponseStageChange) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// 更新已经ready的人数
type ResponseReadyCountUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReadyPlayerIds []uint32 `protobuf:"varint,1,rep,packed,name=ready_player_ids,json=readyPlayerIds,proto3" json:"ready_player_ids,omitempty"`
	TotalCount     uint32   `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
}

func (x *ResponseReadyCountUpdate) Reset() {
	*x = ResponseReadyCountUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_session_resp_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseReadyCountUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseReadyCountUpdate) ProtoMessage() {}

func (x *ResponseReadyCountUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_session_resp_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseReadyCountUpdate.ProtoReflect.Descriptor instead.
func (*ResponseReadyCountUpdate) Descriptor() ([]byte, []int) {
	return file_session_resp_proto_rawDescGZIP(), []int{8}
}

func (x *ResponseReadyCountUpdate) GetReadyPlayerIds() []uint32 {
	if x != nil {
		return x.ReadyPlayerIds
	}
	return nil
}

func (x *ResponseReadyCountUpdate) GetTotalCount() uint32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

// 更新已经loaded的人数
type ResponseLoadedCountUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LoadedPlayerIds []uint32 `protobuf:"varint,1,rep,packed,name=loaded_player_ids,json=loadedPlayerIds,proto3" json:"loaded_player_ids,omitempty"`
	TotalCount      uint32   `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
}

func (x *ResponseLoadedCountUpdate) Reset() {
	*x = ResponseLoadedCountUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_session_resp_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseLoadedCountUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseLoadedCountUpdate) ProtoMessage() {}

func (x *ResponseLoadedCountUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_session_resp_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseLoadedCountUpdate.ProtoReflect.Descriptor instead.
func (*ResponseLoadedCountUpdate) Descriptor() ([]byte, []int) {
	return file_session_resp_proto_rawDescGZIP(), []int{9}
}

func (x *ResponseLoadedCountUpdate) GetLoadedPlayerIds() []uint32 {
	if x != nil {
		return x.LoadedPlayerIds
	}
	return nil
}

func (x *ResponseLoadedCountUpdate) GetTotalCount() uint32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

// 用户的输入序列
// 1. 影响权威游戏世界
// 2. 直接进行帧同步广播
type ClientInputData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid uint32 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	// 用户发送数据时,其所在的FrameID
	// 游戏世界需要自行处理例如延迟补偿等机制
	//
	// e.g. Lag Compensation, Display of Targets
	FrameId uint32 `protobuf:"varint,2,opt,name=frame_id,json=frameId,proto3" json:"frame_id,omitempty"`
	// 解析后的框架无关的额外Bytes,不带有帧ID的原始输入队列
	// 当然也可以是一个键盘扫描码byte
	// e.g. [{"method" : "move", "direction": "up"}, {"method": "attack", "targetID": 1234}]
	Data []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ClientInputData) Reset() {
	*x = ClientInputData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_session_resp_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientInputData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientInputData) ProtoMessage() {}

func (x *ClientInputData) ProtoReflect() protoreflect.Message {
	mi := &file_session_resp_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientInputData.ProtoReflect.Descriptor instead.
func (*ClientInputData) Descriptor() ([]byte, []int) {
	return file_session_resp_proto_rawDescGZIP(), []int{10}
}

func (x *ClientInputData) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *ClientInputData) GetFrameId() uint32 {
	if x != nil {
		return x.FrameId
	}
	return 0
}

func (x *ClientInputData) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// 游戏事件
type WorldEventData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 事件对哪个帧号造成影响
	// 即事件后的下一帧
	FrameId uint32 `protobuf:"varint,1,opt,name=frame_id,json=frameId,proto3" json:"frame_id,omitempty"`
	// 事件的原始数据队列
	// e.g. [{"eventType": "explosion", "position": [100,200]}]
	//
	// 如果是超大地图需要分chunk的游戏，此data也推荐用于顺便携带某next帧的某chunk状态同步数据
	Data []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *WorldEventData) Reset() {
	*x = WorldEventData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_session_resp_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorldEventData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorldEventData) ProtoMessage() {}

func (x *WorldEventData) ProtoReflect() protoreflect.Message {
	mi := &file_session_resp_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorldEventData.ProtoReflect.Descriptor instead.
func (*WorldEventData) Descriptor() ([]byte, []int) {
	return file_session_resp_proto_rawDescGZIP(), []int{11}
}

func (x *WorldEventData) GetFrameId() uint32 {
	if x != nil {
		return x.FrameId
	}
	return 0
}

func (x *WorldEventData) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// 每一帧的完整数据包
type FrameData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 本次服务端将要步进到的帧 ID
	// FrameData和input, events都带有FrameID字段是为了延迟补偿
	// 告知客户端，之前的帧中有遗漏的操作和时间发生
	FrameId uint32 `protobuf:"varint,1,opt,name=frame_id,json=frameId,proto3" json:"frame_id,omitempty"`
	// 服务端确认客户端的最早要步进到的ack帧ID
	// 以方便客户端缓存快照以时间回溯
	OldestAckFrameId uint32 `protobuf:"varint,5,opt,name=oldestAckFrameId,proto3" json:"oldestAckFrameId,omitempty"`
	// 帧数据内容
	// ---
	// 包含了本帧服务器接受到的现在或迟到所有用户的输入
	InputArray []*ClientInputData `protobuf:"bytes,2,rep,name=input_array,json=inputArray,proto3" json:"input_array,omitempty"`
	// 包含了本帧或迟到的权威服务器裁决的发生的所有游戏世界事件
	Events []*WorldEventData `protobuf:"bytes,3,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *FrameData) Reset() {
	*x = FrameData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_session_resp_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrameData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrameData) ProtoMessage() {}

func (x *FrameData) ProtoReflect() protoreflect.Message {
	mi := &file_session_resp_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrameData.ProtoReflect.Descriptor instead.
func (*FrameData) Descriptor() ([]byte, []int) {
	return file_session_resp_proto_rawDescGZIP(), []int{12}
}

func (x *FrameData) GetFrameId() uint32 {
	if x != nil {
		return x.FrameId
	}
	return 0
}

func (x *FrameData) GetOldestAckFrameId() uint32 {
	if x != nil {
		return x.OldestAckFrameId
	}
	return 0
}

func (x *FrameData) GetInputArray() []*ClientInputData {
	if x != nil {
		return x.InputArray
	}
	return nil
}

func (x *FrameData) GetEvents() []*WorldEventData {
	if x != nil {
		return x.Events
	}
	return nil
}

type ResponseInGameFrames struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Frames []*FrameData `protobuf:"bytes,1,rep,name=frames,proto3" json:"frames,omitempty"`
}

func (x *ResponseInGameFrames) Reset() {
	*x = ResponseInGameFrames{}
	if protoimpl.UnsafeEnabled {
		mi := &file_session_resp_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseInGameFrames) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseInGameFrames) ProtoMessage() {}

func (x *ResponseInGameFrames) ProtoReflect() protoreflect.Message {
	mi := &file_session_resp_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseInGameFrames.ProtoReflect.Descriptor instead.
func (*ResponseInGameFrames) Descriptor() ([]byte, []int) {
	return file_session_resp_proto_rawDescGZIP(), []int{13}
}

func (x *ResponseInGameFrames) GetFrames() []*FrameData {
	if x != nil {
		return x.Frames
	}
	return nil
}

type ResponseEndGame struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 游戏结束状态码
	StatusCode uint32 `protobuf:"varint,1,opt,name=StatusCode,proto3" json:"StatusCode,omitempty"`
	// 携带的bytes，框架将直接传给游戏世界处理
	Data []byte `protobuf:"bytes,2,opt,name=data,proto3,oneof" json:"data,omitempty"`
}

func (x *ResponseEndGame) Reset() {
	*x = ResponseEndGame{}
	if protoimpl.UnsafeEnabled {
		mi := &file_session_resp_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseEndGame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseEndGame) ProtoMessage() {}

func (x *ResponseEndGame) ProtoReflect() protoreflect.Message {
	mi := &file_session_resp_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseEndGame.ProtoReflect.Descriptor instead.
func (*ResponseEndGame) Descriptor() ([]byte, []int) {
	return file_session_resp_proto_rawDescGZIP(), []int{14}
}

func (x *ResponseEndGame) GetStatusCode() uint32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *ResponseEndGame) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// 其他响应
// 例如聊天信息等不重要的
type ResponseOther struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 可以携带更多的数据
	// 本框架自身不用此字段
	Data []byte `protobuf:"bytes,1,opt,name=data,proto3,oneof" json:"data,omitempty"`
}

func (x *ResponseOther) Reset() {
	*x = ResponseOther{}
	if protoimpl.UnsafeEnabled {
		mi := &file_session_resp_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseOther) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseOther) ProtoMessage() {}

func (x *ResponseOther) ProtoReflect() protoreflect.Message {
	mi := &file_session_resp_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseOther.ProtoReflect.Descriptor instead.
func (*ResponseOther) Descriptor() ([]byte, []int) {
	return file_session_resp_proto_rawDescGZIP(), []int{15}
}

func (x *ResponseOther) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_session_resp_proto protoreflect.FileDescriptor

var file_session_resp_proto_rawDesc = []byte{
	0x0a, 0x12, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x22, 0xfc,
	0x04, 0x0a, 0x0f, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2c, 0x0a, 0x04, 0x6a, 0x6f, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4a, 0x6f, 0x69, 0x6e, 0x48, 0x00, 0x52, 0x04, 0x6a, 0x6f, 0x69, 0x6e,
	0x12, 0x4f, 0x0a, 0x11, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x48, 0x00,
	0x52, 0x0f, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x64, 0x12, 0x42, 0x0a, 0x0c, 0x73, 0x74, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61, 0x67, 0x65,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x67, 0x65, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x3f, 0x0a, 0x0b, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x63, 0x6c,
	0x6f, 0x73, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x6f,
	0x6f, 0x6d, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x48, 0x00, 0x52, 0x0a, 0x72, 0x6f, 0x6f, 0x6d,
	0x43, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x12, 0x52, 0x0a, 0x12, 0x72, 0x65, 0x61, 0x64, 0x79, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x61, 0x64, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x10, 0x72, 0x65, 0x61, 0x64, 0x79, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x55, 0x0a, 0x13, 0x6c, 0x6f,
	0x61, 0x64, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4c, 0x6f, 0x61, 0x64, 0x65,
	0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x11,
	0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x12, 0x46, 0x0a, 0x0e, 0x69, 0x6e, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x66, 0x72, 0x61,
	0x6d, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x49, 0x6e, 0x47,
	0x61, 0x6d, 0x65, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x48, 0x00, 0x52, 0x0c, 0x69, 0x6e, 0x47,
	0x61, 0x6d, 0x65, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x36, 0x0a, 0x08, 0x65, 0x6e, 0x64,
	0x5f, 0x67, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45,
	0x6e, 0x64, 0x47, 0x61, 0x6d, 0x65, 0x48, 0x00, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x47, 0x61, 0x6d,
	0x65, 0x12, 0x2f, 0x0a, 0x05, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x48, 0x00, 0x52, 0x05, 0x6f, 0x74, 0x68,
	0x65, 0x72, 0x42, 0x09, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0xac, 0x01,
	0x0a, 0x08, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x52, 0x6f,
	0x6f, 0x6d, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x52, 0x6f, 0x6f,
	0x6d, 0x4b, 0x65, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x4d, 0x61, 0x78, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x4d, 0x61, 0x78, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x43, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x12, 0x1c, 0x0a, 0x09,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x44, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0d, 0x52,
	0x09, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x44, 0x73, 0x12, 0x17, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x22, 0x99, 0x01, 0x0a,
	0x13, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4a, 0x6f, 0x69, 0x6e, 0x53, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x44, 0x12, 0x2e, 0x0a, 0x08,
	0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x08, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04,
	0x4d, 0x79, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x4d, 0x79, 0x49, 0x44,
	0x12, 0x26, 0x0a, 0x0e, 0x52, 0x65, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x52, 0x65, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x2c, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4a, 0x6f, 0x69, 0x6e, 0x46, 0x61, 0x69, 0x6c, 0x12, 0x18, 0x0a, 0x07,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x9a, 0x01, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x4a, 0x6f, 0x69, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x39, 0x0a, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x4a, 0x6f, 0x69, 0x6e, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x48, 0x00, 0x52, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x30, 0x0a, 0x04, 0x66, 0x61, 0x69, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4a, 0x6f, 0x69, 0x6e, 0x46, 0x61, 0x69, 0x6c,
	0x48, 0x00, 0x52, 0x04, 0x66, 0x61, 0x69, 0x6c, 0x42, 0x09, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x22, 0x4a, 0x0a, 0x17, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x12, 0x2f,
	0x0a, 0x09, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x52, 0x6f, 0x6f,
	0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x22,
	0x2c, 0x0a, 0x12, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x43,
	0x6c, 0x6f, 0x73, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x53, 0x0a,
	0x13, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61, 0x67, 0x65, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4e, 0x65, 0x77, 0x53, 0x74, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x4e, 0x65, 0x77, 0x53, 0x74, 0x61, 0x67, 0x65,
	0x12, 0x17, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x65, 0x0a, 0x18, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x65,
	0x61, 0x64, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x28,
	0x0a, 0x10, 0x72, 0x65, 0x61, 0x64, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0e, 0x72, 0x65, 0x61, 0x64, 0x79, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x68, 0x0a, 0x19, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64,
	0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0d, 0x52, 0x0f, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49,
	0x64, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0x52, 0x0a, 0x0f, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x72, 0x61, 0x6d,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x66, 0x72, 0x61, 0x6d,
	0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x3f, 0x0a, 0x0e, 0x57, 0x6f, 0x72, 0x6c, 0x64,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x72, 0x61,
	0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x66, 0x72, 0x61,
	0x6d, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xc0, 0x01, 0x0a, 0x09, 0x46, 0x72, 0x61,
	0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x49,
	0x64, 0x12, 0x2a, 0x0a, 0x10, 0x6f, 0x6c, 0x64, 0x65, 0x73, 0x74, 0x41, 0x63, 0x6b, 0x46, 0x72,
	0x61, 0x6d, 0x65, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x6f, 0x6c, 0x64,
	0x65, 0x73, 0x74, 0x41, 0x63, 0x6b, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x3a, 0x0a,
	0x0b, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f, 0x61, 0x72, 0x72, 0x61, 0x79, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0a, 0x69,
	0x6e, 0x70, 0x75, 0x74, 0x41, 0x72, 0x72, 0x61, 0x79, 0x12, 0x30, 0x0a, 0x06, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x2e, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x43, 0x0a, 0x14, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x49, 0x6e, 0x47, 0x61, 0x6d, 0x65, 0x46, 0x72, 0x61,
	0x6d, 0x65, 0x73, 0x12, 0x2b, 0x0a, 0x06, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x46,
	0x72, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73,
	0x22, 0x53, 0x0a, 0x0f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x6e, 0x64, 0x47,
	0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x17, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x22, 0x31, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x88, 0x01, 0x01, 0x42,
	0x07, 0x0a, 0x05, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x42, 0x0d, 0x5a, 0x0b, 0x2e, 0x2f, 0x3b, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_session_resp_proto_rawDescOnce sync.Once
	file_session_resp_proto_rawDescData = file_session_resp_proto_rawDesc
)

func file_session_resp_proto_rawDescGZIP() []byte {
	file_session_resp_proto_rawDescOnce.Do(func() {
		file_session_resp_proto_rawDescData = protoimpl.X.CompressGZIP(file_session_resp_proto_rawDescData)
	})
	return file_session_resp_proto_rawDescData
}

var file_session_resp_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_session_resp_proto_goTypes = []interface{}{
	(*SessionResponse)(nil),           // 0: messages.SessionResponse
	(*RoomInfo)(nil),                  // 1: messages.RoomInfo
	(*ResponseJoinSuccess)(nil),       // 2: messages.ResponseJoinSuccess
	(*ResponseJoinFail)(nil),          // 3: messages.ResponseJoinFail
	(*ResponseJoin)(nil),              // 4: messages.ResponseJoin
	(*ResponseRoomInfoChanged)(nil),   // 5: messages.ResponseRoomInfoChanged
	(*ResponseRoomClosed)(nil),        // 6: messages.ResponseRoomClosed
	(*ResponseStageChange)(nil),       // 7: messages.ResponseStageChange
	(*ResponseReadyCountUpdate)(nil),  // 8: messages.ResponseReadyCountUpdate
	(*ResponseLoadedCountUpdate)(nil), // 9: messages.ResponseLoadedCountUpdate
	(*ClientInputData)(nil),           // 10: messages.ClientInputData
	(*WorldEventData)(nil),            // 11: messages.WorldEventData
	(*FrameData)(nil),                 // 12: messages.FrameData
	(*ResponseInGameFrames)(nil),      // 13: messages.ResponseInGameFrames
	(*ResponseEndGame)(nil),           // 14: messages.ResponseEndGame
	(*ResponseOther)(nil),             // 15: messages.ResponseOther
}
var file_session_resp_proto_depIdxs = []int32{
	4,  // 0: messages.SessionResponse.join:type_name -> messages.ResponseJoin
	5,  // 1: messages.SessionResponse.room_info_changed:type_name -> messages.ResponseRoomInfoChanged
	7,  // 2: messages.SessionResponse.stage_change:type_name -> messages.ResponseStageChange
	6,  // 3: messages.SessionResponse.room_closed:type_name -> messages.ResponseRoomClosed
	8,  // 4: messages.SessionResponse.ready_count_update:type_name -> messages.ResponseReadyCountUpdate
	9,  // 5: messages.SessionResponse.loaded_count_update:type_name -> messages.ResponseLoadedCountUpdate
	13, // 6: messages.SessionResponse.in_game_frames:type_name -> messages.ResponseInGameFrames
	14, // 7: messages.SessionResponse.end_game:type_name -> messages.ResponseEndGame
	15, // 8: messages.SessionResponse.other:type_name -> messages.ResponseOther
	1,  // 9: messages.ResponseJoinSuccess.RoomInfo:type_name -> messages.RoomInfo
	2,  // 10: messages.ResponseJoin.success:type_name -> messages.ResponseJoinSuccess
	3,  // 11: messages.ResponseJoin.fail:type_name -> messages.ResponseJoinFail
	1,  // 12: messages.ResponseRoomInfoChanged.room_info:type_name -> messages.RoomInfo
	10, // 13: messages.FrameData.input_array:type_name -> messages.ClientInputData
	11, // 14: messages.FrameData.events:type_name -> messages.WorldEventData
	12, // 15: messages.ResponseInGameFrames.frames:type_name -> messages.FrameData
	16, // [16:16] is the sub-list for method output_type
	16, // [16:16] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_session_resp_proto_init() }
func file_session_resp_proto_init() {
	if File_session_resp_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_session_resp_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_session_resp_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoomInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_session_resp_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseJoinSuccess); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_session_resp_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseJoinFail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_session_resp_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseJoin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_session_resp_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseRoomInfoChanged); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_session_resp_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseRoomClosed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_session_resp_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseStageChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_session_resp_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseReadyCountUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_session_resp_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseLoadedCountUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_session_resp_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientInputData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_session_resp_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorldEventData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_session_resp_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrameData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_session_resp_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseInGameFrames); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_session_resp_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseEndGame); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_session_resp_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseOther); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_session_resp_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*SessionResponse_Join)(nil),
		(*SessionResponse_RoomInfoChanged)(nil),
		(*SessionResponse_StageChange)(nil),
		(*SessionResponse_RoomClosed)(nil),
		(*SessionResponse_ReadyCountUpdate)(nil),
		(*SessionResponse_LoadedCountUpdate)(nil),
		(*SessionResponse_InGameFrames)(nil),
		(*SessionResponse_EndGame)(nil),
		(*SessionResponse_Other)(nil),
	}
	file_session_resp_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_session_resp_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*ResponseJoin_Success)(nil),
		(*ResponseJoin_Fail)(nil),
	}
	file_session_resp_proto_msgTypes[7].OneofWrappers = []interface{}{}
	file_session_resp_proto_msgTypes[14].OneofWrappers = []interface{}{}
	file_session_resp_proto_msgTypes[15].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_session_resp_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_session_resp_proto_goTypes,
		DependencyIndexes: file_session_resp_proto_depIdxs,
		MessageInfos:      file_session_resp_proto_msgTypes,
	}.Build()
	File_session_resp_proto = out.File
	file_session_resp_proto_rawDesc = nil
	file_session_resp_proto_goTypes = nil
	file_session_resp_proto_depIdxs = nil
}
