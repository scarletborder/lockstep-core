// request.proto

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.32.1
// source: request.proto

// 定义包名，这会影响 Go 和其他语言的命名空间

package messages

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 包装消息，包含所有可能的请求类型
// 因为客户端发送的消息会被统一的后端ws handler解析
// 再根据后端room的状态进行分支处理
type Request struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// oneof 确保一个 Request 消息实例中，只有一个字段能被设置
	//
	// Types that are valid to be assigned to Payload:
	//
	//	*Request_ChooseMap
	//	*Request_LeaveChooseMap
	//	*Request_Ready
	//	*Request_Loaded
	//	*Request_Blank
	//	*Request_Plant
	//	*Request_RemovePlant
	//	*Request_StarShards
	//	*Request_EndGame
	Payload       isRequest_Payload `protobuf_oneof:"payload"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Request) Reset() {
	*x = Request{}
	mi := &file_request_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request) ProtoMessage() {}

func (x *Request) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request.ProtoReflect.Descriptor instead.
func (*Request) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{0}
}

func (x *Request) GetPayload() isRequest_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *Request) GetChooseMap() *RequestChooseMap {
	if x != nil {
		if x, ok := x.Payload.(*Request_ChooseMap); ok {
			return x.ChooseMap
		}
	}
	return nil
}

func (x *Request) GetLeaveChooseMap() *RequestLeaveChooseMap {
	if x != nil {
		if x, ok := x.Payload.(*Request_LeaveChooseMap); ok {
			return x.LeaveChooseMap
		}
	}
	return nil
}

func (x *Request) GetReady() *RequestReady {
	if x != nil {
		if x, ok := x.Payload.(*Request_Ready); ok {
			return x.Ready
		}
	}
	return nil
}

func (x *Request) GetLoaded() *RequestLoaded {
	if x != nil {
		if x, ok := x.Payload.(*Request_Loaded); ok {
			return x.Loaded
		}
	}
	return nil
}

func (x *Request) GetBlank() *RequestBlank {
	if x != nil {
		if x, ok := x.Payload.(*Request_Blank); ok {
			return x.Blank
		}
	}
	return nil
}

func (x *Request) GetPlant() *RequestCardPlant {
	if x != nil {
		if x, ok := x.Payload.(*Request_Plant); ok {
			return x.Plant
		}
	}
	return nil
}

func (x *Request) GetRemovePlant() *RequestRemovePlant {
	if x != nil {
		if x, ok := x.Payload.(*Request_RemovePlant); ok {
			return x.RemovePlant
		}
	}
	return nil
}

func (x *Request) GetStarShards() *RequestStarShards {
	if x != nil {
		if x, ok := x.Payload.(*Request_StarShards); ok {
			return x.StarShards
		}
	}
	return nil
}

func (x *Request) GetEndGame() *RequestEndGame {
	if x != nil {
		if x, ok := x.Payload.(*Request_EndGame); ok {
			return x.EndGame
		}
	}
	return nil
}

type isRequest_Payload interface {
	isRequest_Payload()
}

type Request_ChooseMap struct {
	ChooseMap *RequestChooseMap `protobuf:"bytes,6,opt,name=choose_map,json=chooseMap,proto3,oneof"`
}

type Request_LeaveChooseMap struct {
	LeaveChooseMap *RequestLeaveChooseMap `protobuf:"bytes,9,opt,name=leave_choose_map,json=leaveChooseMap,proto3,oneof"`
}

type Request_Ready struct {
	Ready *RequestReady `protobuf:"bytes,5,opt,name=ready,proto3,oneof"`
}

type Request_Loaded struct {
	Loaded *RequestLoaded `protobuf:"bytes,8,opt,name=loaded,proto3,oneof"`
}

type Request_Blank struct {
	Blank *RequestBlank `protobuf:"bytes,1,opt,name=blank,proto3,oneof"`
}

type Request_Plant struct {
	Plant *RequestCardPlant `protobuf:"bytes,2,opt,name=plant,proto3,oneof"`
}

type Request_RemovePlant struct {
	RemovePlant *RequestRemovePlant `protobuf:"bytes,3,opt,name=remove_plant,json=removePlant,proto3,oneof"`
}

type Request_StarShards struct {
	StarShards *RequestStarShards `protobuf:"bytes,4,opt,name=star_shards,json=starShards,proto3,oneof"`
}

type Request_EndGame struct {
	EndGame *RequestEndGame `protobuf:"bytes,7,opt,name=end_game,json=endGame,proto3,oneof"`
}

func (*Request_ChooseMap) isRequest_Payload() {}

func (*Request_LeaveChooseMap) isRequest_Payload() {}

func (*Request_Ready) isRequest_Payload() {}

func (*Request_Loaded) isRequest_Payload() {}

func (*Request_Blank) isRequest_Payload() {}

func (*Request_Plant) isRequest_Payload() {}

func (*Request_RemovePlant) isRequest_Payload() {}

func (*Request_StarShards) isRequest_Payload() {}

func (*Request_EndGame) isRequest_Payload() {}

// RequestChooseMap 请求选择地图
// 房主客户端在选择地图时发送此请求
// 进入preparing阶段
type RequestChooseMap struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChapterId     uint32                 `protobuf:"varint,1,opt,name=chapter_id,json=chapterId,proto3" json:"chapter_id,omitempty"`
	StageId       uint32                 `protobuf:"varint,2,opt,name=stage_id,json=stageId,proto3" json:"stage_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RequestChooseMap) Reset() {
	*x = RequestChooseMap{}
	mi := &file_request_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestChooseMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestChooseMap) ProtoMessage() {}

func (x *RequestChooseMap) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestChooseMap.ProtoReflect.Descriptor instead.
func (*RequestChooseMap) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{1}
}

func (x *RequestChooseMap) GetChapterId() uint32 {
	if x != nil {
		return x.ChapterId
	}
	return 0
}

func (x *RequestChooseMap) GetStageId() uint32 {
	if x != nil {
		return x.StageId
	}
	return 0
}

// 退出选preparing阶段
type RequestLeaveChooseMap struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RequestLeaveChooseMap) Reset() {
	*x = RequestLeaveChooseMap{}
	mi := &file_request_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestLeaveChooseMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestLeaveChooseMap) ProtoMessage() {}

func (x *RequestLeaveChooseMap) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestLeaveChooseMap.ProtoReflect.Descriptor instead.
func (*RequestLeaveChooseMap) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{2}
}

// Ready 表示某个客户端在选卡界面切换准备就绪
type RequestReady struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsReady       bool                   `protobuf:"varint,1,opt,name=isReady,proto3" json:"isReady,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RequestReady) Reset() {
	*x = RequestReady{}
	mi := &file_request_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestReady) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestReady) ProtoMessage() {}

func (x *RequestReady) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestReady.ProtoReflect.Descriptor instead.
func (*RequestReady) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{3}
}

func (x *RequestReady) GetIsReady() bool {
	if x != nil {
		return x.IsReady
	}
	return false
}

// Loaded 表示某个客户端加载完毕
type RequestLoaded struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsLoaded      bool                   `protobuf:"varint,1,opt,name=isLoaded,proto3" json:"isLoaded,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RequestLoaded) Reset() {
	*x = RequestLoaded{}
	mi := &file_request_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestLoaded) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestLoaded) ProtoMessage() {}

func (x *RequestLoaded) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestLoaded.ProtoReflect.Descriptor instead.
func (*RequestLoaded) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{4}
}

func (x *RequestLoaded) GetIsLoaded() bool {
	if x != nil {
		return x.IsLoaded
	}
	return false
}

// RequestBlank 用于心跳的空请求
// 每一个“不发送具体请求”的逻辑帧都应该发此请求
type RequestBlank struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 客户端需要把此帧插入的位置
	FrameId uint32 `protobuf:"varint,1,opt,name=frame_id,json=frameId,proto3" json:"frame_id,omitempty"`
	// 客户端上一次确认的帧
	AckFrameId    uint32 `protobuf:"varint,2,opt,name=ack_frame_id,json=ackFrameId,proto3" json:"ack_frame_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RequestBlank) Reset() {
	*x = RequestBlank{}
	mi := &file_request_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestBlank) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestBlank) ProtoMessage() {}

func (x *RequestBlank) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestBlank.ProtoReflect.Descriptor instead.
func (*RequestBlank) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{5}
}

func (x *RequestBlank) GetFrameId() uint32 {
	if x != nil {
		return x.FrameId
	}
	return 0
}

func (x *RequestBlank) GetAckFrameId() uint32 {
	if x != nil {
		return x.AckFrameId
	}
	return 0
}

// RequestGridOperation 格子操作请求
// 应该作为基类被其他请求继承
type RequestGridOperation struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 使用 RequestBlank 作为基础消息
	// 这表示这是一个心跳请求，包含了必要的帧信息
	Base *RequestBlank `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	// 操作的格子列
	Col uint32 `protobuf:"varint,2,opt,name=col,proto3" json:"col,omitempty"`
	// 操作的格子行
	Row uint32 `protobuf:"varint,3,opt,name=row,proto3" json:"row,omitempty"`
	// 此操作应该在哪一帧时进行
	ProcessFrameId uint32 `protobuf:"varint,4,opt,name=process_frame_id,json=processFrameId,proto3" json:"process_frame_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *RequestGridOperation) Reset() {
	*x = RequestGridOperation{}
	mi := &file_request_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestGridOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestGridOperation) ProtoMessage() {}

func (x *RequestGridOperation) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestGridOperation.ProtoReflect.Descriptor instead.
func (*RequestGridOperation) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{6}
}

func (x *RequestGridOperation) GetBase() *RequestBlank {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *RequestGridOperation) GetCol() uint32 {
	if x != nil {
		return x.Col
	}
	return 0
}

func (x *RequestGridOperation) GetRow() uint32 {
	if x != nil {
		return x.Row
	}
	return 0
}

func (x *RequestGridOperation) GetProcessFrameId() uint32 {
	if x != nil {
		return x.ProcessFrameId
	}
	return 0
}

// RequestCardPlant 卡片种植请求
type RequestCardPlant struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 使用 RequestGridOperation 作为基础消息
	Base *RequestGridOperation `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	// 卡片 ID
	Pid uint32 `protobuf:"varint,2,opt,name=pid,proto3" json:"pid,omitempty"`
	// 卡片等级
	Level uint32 `protobuf:"varint,3,opt,name=level,proto3" json:"level,omitempty"`
	// 此次操作带来的消耗
	// 消耗性将在得到响应前直接扣除
	// 只有在得到服务器说，此次操作失败才会返还
	Cost int32 `protobuf:"varint,4,opt,name=cost,proto3" json:"cost,omitempty"`
	// 本次用户的阳光总数
	EnergySum int32 `protobuf:"varint,5,opt,name=EnergySum,proto3" json:"EnergySum,omitempty"`
	// 本次用户的星之碎片总数
	StarShardsSum int32 `protobuf:"varint,6,opt,name=StarShardsSum,proto3" json:"StarShardsSum,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RequestCardPlant) Reset() {
	*x = RequestCardPlant{}
	mi := &file_request_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestCardPlant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestCardPlant) ProtoMessage() {}

func (x *RequestCardPlant) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestCardPlant.ProtoReflect.Descriptor instead.
func (*RequestCardPlant) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{7}
}

func (x *RequestCardPlant) GetBase() *RequestGridOperation {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *RequestCardPlant) GetPid() uint32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *RequestCardPlant) GetLevel() uint32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *RequestCardPlant) GetCost() int32 {
	if x != nil {
		return x.Cost
	}
	return 0
}

func (x *RequestCardPlant) GetEnergySum() int32 {
	if x != nil {
		return x.EnergySum
	}
	return 0
}

func (x *RequestCardPlant) GetStarShardsSum() int32 {
	if x != nil {
		return x.StarShardsSum
	}
	return 0
}

// RequestRemovePlant 铲除植物请求
type RequestRemovePlant struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 使用 RequestGridOperation 作为基础消息
	Base *RequestGridOperation `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	// 要铲除的植物 ID
	// 一个grid上有多个植物， 用植物的卡片id（非战局内实体id）
	Pid           uint32 `protobuf:"varint,2,opt,name=pid,proto3" json:"pid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RequestRemovePlant) Reset() {
	*x = RequestRemovePlant{}
	mi := &file_request_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestRemovePlant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestRemovePlant) ProtoMessage() {}

func (x *RequestRemovePlant) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestRemovePlant.ProtoReflect.Descriptor instead.
func (*RequestRemovePlant) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{8}
}

func (x *RequestRemovePlant) GetBase() *RequestGridOperation {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *RequestRemovePlant) GetPid() uint32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

type RequestStarShards struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 使用 RequestGridOperation 作为基础消息
	Base *RequestGridOperation `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	// 施加星之能力卡片 ID
	// 一个grid上有多个植物， 用植物的卡片id（非战局内实体id）
	Pid uint32 `protobuf:"varint,2,opt,name=pid,proto3" json:"pid,omitempty"`
	// 此次操作带来的消耗
	// 消耗性将在得到响应前直接扣除
	// 只有在得到服务器说，此次操作失败才会返还
	Cost int32 `protobuf:"varint,3,opt,name=cost,proto3" json:"cost,omitempty"`
	// 本次用户的阳光总数
	EnergySum int32 `protobuf:"varint,4,opt,name=EnergySum,proto3" json:"EnergySum,omitempty"`
	// 本次用户的星之碎片总数
	StarShardsSum int32 `protobuf:"varint,5,opt,name=StarShardsSum,proto3" json:"StarShardsSum,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RequestStarShards) Reset() {
	*x = RequestStarShards{}
	mi := &file_request_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestStarShards) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestStarShards) ProtoMessage() {}

func (x *RequestStarShards) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestStarShards.ProtoReflect.Descriptor instead.
func (*RequestStarShards) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{9}
}

func (x *RequestStarShards) GetBase() *RequestGridOperation {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *RequestStarShards) GetPid() uint32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *RequestStarShards) GetCost() int32 {
	if x != nil {
		return x.Cost
	}
	return 0
}

func (x *RequestStarShards) GetEnergySum() int32 {
	if x != nil {
		return x.EnergySum
	}
	return 0
}

func (x *RequestStarShards) GetStarShardsSum() int32 {
	if x != nil {
		return x.StarShardsSum
	}
	return 0
}

// 客户端本地游戏结束时告诉服务端
type RequestEndGame struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GameResult    uint32                 `protobuf:"varint,1,opt,name=game_result,json=gameResult,proto3" json:"game_result,omitempty"` // 0: 失败, 1: 胜利
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RequestEndGame) Reset() {
	*x = RequestEndGame{}
	mi := &file_request_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestEndGame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestEndGame) ProtoMessage() {}

func (x *RequestEndGame) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestEndGame.ProtoReflect.Descriptor instead.
func (*RequestEndGame) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{10}
}

func (x *RequestEndGame) GetGameResult() uint32 {
	if x != nil {
		return x.GameResult
	}
	return 0
}

var File_request_proto protoreflect.FileDescriptor

const file_request_proto_rawDesc = "" +
	"\n" +
	"\rrequest.proto\x12\bmessages\"\x9f\x04\n" +
	"\aRequest\x12;\n" +
	"\n" +
	"choose_map\x18\x06 \x01(\v2\x1a.messages.RequestChooseMapH\x00R\tchooseMap\x12K\n" +
	"\x10leave_choose_map\x18\t \x01(\v2\x1f.messages.RequestLeaveChooseMapH\x00R\x0eleaveChooseMap\x12.\n" +
	"\x05ready\x18\x05 \x01(\v2\x16.messages.RequestReadyH\x00R\x05ready\x121\n" +
	"\x06loaded\x18\b \x01(\v2\x17.messages.RequestLoadedH\x00R\x06loaded\x12.\n" +
	"\x05blank\x18\x01 \x01(\v2\x16.messages.RequestBlankH\x00R\x05blank\x122\n" +
	"\x05plant\x18\x02 \x01(\v2\x1a.messages.RequestCardPlantH\x00R\x05plant\x12A\n" +
	"\fremove_plant\x18\x03 \x01(\v2\x1c.messages.RequestRemovePlantH\x00R\vremovePlant\x12>\n" +
	"\vstar_shards\x18\x04 \x01(\v2\x1b.messages.RequestStarShardsH\x00R\n" +
	"starShards\x125\n" +
	"\bend_game\x18\a \x01(\v2\x18.messages.RequestEndGameH\x00R\aendGameB\t\n" +
	"\apayload\"L\n" +
	"\x10RequestChooseMap\x12\x1d\n" +
	"\n" +
	"chapter_id\x18\x01 \x01(\rR\tchapterId\x12\x19\n" +
	"\bstage_id\x18\x02 \x01(\rR\astageId\"\x17\n" +
	"\x15RequestLeaveChooseMap\"(\n" +
	"\fRequestReady\x12\x18\n" +
	"\aisReady\x18\x01 \x01(\bR\aisReady\"+\n" +
	"\rRequestLoaded\x12\x1a\n" +
	"\bisLoaded\x18\x01 \x01(\bR\bisLoaded\"K\n" +
	"\fRequestBlank\x12\x19\n" +
	"\bframe_id\x18\x01 \x01(\rR\aframeId\x12 \n" +
	"\fack_frame_id\x18\x02 \x01(\rR\n" +
	"ackFrameId\"\x90\x01\n" +
	"\x14RequestGridOperation\x12*\n" +
	"\x04base\x18\x01 \x01(\v2\x16.messages.RequestBlankR\x04base\x12\x10\n" +
	"\x03col\x18\x02 \x01(\rR\x03col\x12\x10\n" +
	"\x03row\x18\x03 \x01(\rR\x03row\x12(\n" +
	"\x10process_frame_id\x18\x04 \x01(\rR\x0eprocessFrameId\"\xc6\x01\n" +
	"\x10RequestCardPlant\x122\n" +
	"\x04base\x18\x01 \x01(\v2\x1e.messages.RequestGridOperationR\x04base\x12\x10\n" +
	"\x03pid\x18\x02 \x01(\rR\x03pid\x12\x14\n" +
	"\x05level\x18\x03 \x01(\rR\x05level\x12\x12\n" +
	"\x04cost\x18\x04 \x01(\x05R\x04cost\x12\x1c\n" +
	"\tEnergySum\x18\x05 \x01(\x05R\tEnergySum\x12$\n" +
	"\rStarShardsSum\x18\x06 \x01(\x05R\rStarShardsSum\"Z\n" +
	"\x12RequestRemovePlant\x122\n" +
	"\x04base\x18\x01 \x01(\v2\x1e.messages.RequestGridOperationR\x04base\x12\x10\n" +
	"\x03pid\x18\x02 \x01(\rR\x03pid\"\xb1\x01\n" +
	"\x11RequestStarShards\x122\n" +
	"\x04base\x18\x01 \x01(\v2\x1e.messages.RequestGridOperationR\x04base\x12\x10\n" +
	"\x03pid\x18\x02 \x01(\rR\x03pid\x12\x12\n" +
	"\x04cost\x18\x03 \x01(\x05R\x04cost\x12\x1c\n" +
	"\tEnergySum\x18\x04 \x01(\x05R\tEnergySum\x12$\n" +
	"\rStarShardsSum\x18\x05 \x01(\x05R\rStarShardsSum\"1\n" +
	"\x0eRequestEndGame\x12\x1f\n" +
	"\vgame_result\x18\x01 \x01(\rR\n" +
	"gameResultB\rZ\v./;messagesb\x06proto3"

var (
	file_request_proto_rawDescOnce sync.Once
	file_request_proto_rawDescData []byte
)

func file_request_proto_rawDescGZIP() []byte {
	file_request_proto_rawDescOnce.Do(func() {
		file_request_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_request_proto_rawDesc), len(file_request_proto_rawDesc)))
	})
	return file_request_proto_rawDescData
}

var file_request_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_request_proto_goTypes = []any{
	(*Request)(nil),               // 0: messages.Request
	(*RequestChooseMap)(nil),      // 1: messages.RequestChooseMap
	(*RequestLeaveChooseMap)(nil), // 2: messages.RequestLeaveChooseMap
	(*RequestReady)(nil),          // 3: messages.RequestReady
	(*RequestLoaded)(nil),         // 4: messages.RequestLoaded
	(*RequestBlank)(nil),          // 5: messages.RequestBlank
	(*RequestGridOperation)(nil),  // 6: messages.RequestGridOperation
	(*RequestCardPlant)(nil),      // 7: messages.RequestCardPlant
	(*RequestRemovePlant)(nil),    // 8: messages.RequestRemovePlant
	(*RequestStarShards)(nil),     // 9: messages.RequestStarShards
	(*RequestEndGame)(nil),        // 10: messages.RequestEndGame
}
var file_request_proto_depIdxs = []int32{
	1,  // 0: messages.Request.choose_map:type_name -> messages.RequestChooseMap
	2,  // 1: messages.Request.leave_choose_map:type_name -> messages.RequestLeaveChooseMap
	3,  // 2: messages.Request.ready:type_name -> messages.RequestReady
	4,  // 3: messages.Request.loaded:type_name -> messages.RequestLoaded
	5,  // 4: messages.Request.blank:type_name -> messages.RequestBlank
	7,  // 5: messages.Request.plant:type_name -> messages.RequestCardPlant
	8,  // 6: messages.Request.remove_plant:type_name -> messages.RequestRemovePlant
	9,  // 7: messages.Request.star_shards:type_name -> messages.RequestStarShards
	10, // 8: messages.Request.end_game:type_name -> messages.RequestEndGame
	5,  // 9: messages.RequestGridOperation.base:type_name -> messages.RequestBlank
	6,  // 10: messages.RequestCardPlant.base:type_name -> messages.RequestGridOperation
	6,  // 11: messages.RequestRemovePlant.base:type_name -> messages.RequestGridOperation
	6,  // 12: messages.RequestStarShards.base:type_name -> messages.RequestGridOperation
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_request_proto_init() }
func file_request_proto_init() {
	if File_request_proto != nil {
		return
	}
	file_request_proto_msgTypes[0].OneofWrappers = []any{
		(*Request_ChooseMap)(nil),
		(*Request_LeaveChooseMap)(nil),
		(*Request_Ready)(nil),
		(*Request_Loaded)(nil),
		(*Request_Blank)(nil),
		(*Request_Plant)(nil),
		(*Request_RemovePlant)(nil),
		(*Request_StarShards)(nil),
		(*Request_EndGame)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_request_proto_rawDesc), len(file_request_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_request_proto_goTypes,
		DependencyIndexes: file_request_proto_depIdxs,
		MessageInfos:      file_request_proto_msgTypes,
	}.Build()
	File_request_proto = out.File
	file_request_proto_goTypes = nil
	file_request_proto_depIdxs = nil
}
