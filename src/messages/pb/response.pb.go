// response.proto

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.32.1
// source: response.proto

package messages

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// general
type ResponseErrorMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResponseErrorMessage) Reset() {
	*x = ResponseErrorMessage{}
	mi := &file_response_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResponseErrorMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseErrorMessage) ProtoMessage() {}

func (x *ResponseErrorMessage) ProtoReflect() protoreflect.Message {
	mi := &file_response_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseErrorMessage.ProtoReflect.Descriptor instead.
func (*ResponseErrorMessage) Descriptor() ([]byte, []int) {
	return file_response_proto_rawDescGZIP(), []int{0}
}

func (x *ResponseErrorMessage) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// ----------
// 大厅（房间外）
// 在一次加入流程中只会有一个响应
type LobbyResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Payload:
	//
	//	*LobbyResponse_JoinRoomSuccess
	//	*LobbyResponse_JoinRoomFailed
	Payload       isLobbyResponse_Payload `protobuf_oneof:"payload"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LobbyResponse) Reset() {
	*x = LobbyResponse{}
	mi := &file_response_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LobbyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LobbyResponse) ProtoMessage() {}

func (x *LobbyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_response_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LobbyResponse.ProtoReflect.Descriptor instead.
func (*LobbyResponse) Descriptor() ([]byte, []int) {
	return file_response_proto_rawDescGZIP(), []int{1}
}

func (x *LobbyResponse) GetPayload() isLobbyResponse_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *LobbyResponse) GetJoinRoomSuccess() *ResponseJoinRoomSuccess {
	if x != nil {
		if x, ok := x.Payload.(*LobbyResponse_JoinRoomSuccess); ok {
			return x.JoinRoomSuccess
		}
	}
	return nil
}

func (x *LobbyResponse) GetJoinRoomFailed() *ResponseJoinRoomFailed {
	if x != nil {
		if x, ok := x.Payload.(*LobbyResponse_JoinRoomFailed); ok {
			return x.JoinRoomFailed
		}
	}
	return nil
}

type isLobbyResponse_Payload interface {
	isLobbyResponse_Payload()
}

type LobbyResponse_JoinRoomSuccess struct {
	JoinRoomSuccess *ResponseJoinRoomSuccess `protobuf:"bytes,1,opt,name=join_room_success,json=joinRoomSuccess,proto3,oneof"`
}

type LobbyResponse_JoinRoomFailed struct {
	JoinRoomFailed *ResponseJoinRoomFailed `protobuf:"bytes,2,opt,name=join_room_failed,json=joinRoomFailed,proto3,oneof"`
}

func (*LobbyResponse_JoinRoomSuccess) isLobbyResponse_Payload() {}

func (*LobbyResponse_JoinRoomFailed) isLobbyResponse_Payload() {}

// 加入房间失败
type ResponseJoinRoomFailed struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"` // 错误信息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResponseJoinRoomFailed) Reset() {
	*x = ResponseJoinRoomFailed{}
	mi := &file_response_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResponseJoinRoomFailed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseJoinRoomFailed) ProtoMessage() {}

func (x *ResponseJoinRoomFailed) ProtoReflect() protoreflect.Message {
	mi := &file_response_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseJoinRoomFailed.ProtoReflect.Descriptor instead.
func (*ResponseJoinRoomFailed) Descriptor() ([]byte, []int) {
	return file_response_proto_rawDescGZIP(), []int{2}
}

func (x *ResponseJoinRoomFailed) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 加入房间成功
type ResponseJoinRoomSuccess struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RoomId        uint32                 `protobuf:"varint,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"` // 房间 ID
	MyId          uint32                 `protobuf:"varint,2,opt,name=my_id,json=myId,proto3" json:"my_id,omitempty"`       // 我的 ID
	Key           string                 `protobuf:"bytes,4,opt,name=key,proto3" json:"key,omitempty"`                      // 房间密钥
	Message       string                 `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`              // 成功信息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResponseJoinRoomSuccess) Reset() {
	*x = ResponseJoinRoomSuccess{}
	mi := &file_response_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResponseJoinRoomSuccess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseJoinRoomSuccess) ProtoMessage() {}

func (x *ResponseJoinRoomSuccess) ProtoReflect() protoreflect.Message {
	mi := &file_response_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseJoinRoomSuccess.ProtoReflect.Descriptor instead.
func (*ResponseJoinRoomSuccess) Descriptor() ([]byte, []int) {
	return file_response_proto_rawDescGZIP(), []int{3}
}

func (x *ResponseJoinRoomSuccess) GetRoomId() uint32 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *ResponseJoinRoomSuccess) GetMyId() uint32 {
	if x != nil {
		return x.MyId
	}
	return 0
}

func (x *ResponseJoinRoomSuccess) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ResponseJoinRoomSuccess) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 房间（游戏外），包含所有可能的响应类型
type RoomResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Payload:
	//
	//	*RoomResponse_RoomInfo
	//	*RoomResponse_ChooseMap
	//	*RoomResponse_QuitChooseMap
	//	*RoomResponse_RoomClosed
	//	*RoomResponse_GameEnd
	//	*RoomResponse_Error
	//	*RoomResponse_UpdateReadyCount
	//	*RoomResponse_AllReady
	//	*RoomResponse_AllLoaded
	Payload       isRoomResponse_Payload `protobuf_oneof:"payload"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RoomResponse) Reset() {
	*x = RoomResponse{}
	mi := &file_response_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RoomResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomResponse) ProtoMessage() {}

func (x *RoomResponse) ProtoReflect() protoreflect.Message {
	mi := &file_response_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomResponse.ProtoReflect.Descriptor instead.
func (*RoomResponse) Descriptor() ([]byte, []int) {
	return file_response_proto_rawDescGZIP(), []int{4}
}

func (x *RoomResponse) GetPayload() isRoomResponse_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *RoomResponse) GetRoomInfo() *ResponseRoomInfo {
	if x != nil {
		if x, ok := x.Payload.(*RoomResponse_RoomInfo); ok {
			return x.RoomInfo
		}
	}
	return nil
}

func (x *RoomResponse) GetChooseMap() *ResponseChooseMap {
	if x != nil {
		if x, ok := x.Payload.(*RoomResponse_ChooseMap); ok {
			return x.ChooseMap
		}
	}
	return nil
}

func (x *RoomResponse) GetQuitChooseMap() *ResponseQuitChooseMap {
	if x != nil {
		if x, ok := x.Payload.(*RoomResponse_QuitChooseMap); ok {
			return x.QuitChooseMap
		}
	}
	return nil
}

func (x *RoomResponse) GetRoomClosed() *ResponseRoomClosed {
	if x != nil {
		if x, ok := x.Payload.(*RoomResponse_RoomClosed); ok {
			return x.RoomClosed
		}
	}
	return nil
}

func (x *RoomResponse) GetGameEnd() *ResponseGameEnd {
	if x != nil {
		if x, ok := x.Payload.(*RoomResponse_GameEnd); ok {
			return x.GameEnd
		}
	}
	return nil
}

func (x *RoomResponse) GetError() *ResponseErrorMessage {
	if x != nil {
		if x, ok := x.Payload.(*RoomResponse_Error); ok {
			return x.Error
		}
	}
	return nil
}

func (x *RoomResponse) GetUpdateReadyCount() *ResponseUpdateReadyCount {
	if x != nil {
		if x, ok := x.Payload.(*RoomResponse_UpdateReadyCount); ok {
			return x.UpdateReadyCount
		}
	}
	return nil
}

func (x *RoomResponse) GetAllReady() *ResponseAllReady {
	if x != nil {
		if x, ok := x.Payload.(*RoomResponse_AllReady); ok {
			return x.AllReady
		}
	}
	return nil
}

func (x *RoomResponse) GetAllLoaded() *ResponseAllLoaded {
	if x != nil {
		if x, ok := x.Payload.(*RoomResponse_AllLoaded); ok {
			return x.AllLoaded
		}
	}
	return nil
}

type isRoomResponse_Payload interface {
	isRoomResponse_Payload()
}

type RoomResponse_RoomInfo struct {
	RoomInfo *ResponseRoomInfo `protobuf:"bytes,1,opt,name=room_info,json=roomInfo,proto3,oneof"`
}

type RoomResponse_ChooseMap struct {
	ChooseMap *ResponseChooseMap `protobuf:"bytes,2,opt,name=choose_map,json=chooseMap,proto3,oneof"`
}

type RoomResponse_QuitChooseMap struct {
	QuitChooseMap *ResponseQuitChooseMap `protobuf:"bytes,9,opt,name=quit_choose_map,json=quitChooseMap,proto3,oneof"` // 退出选卡阶段
}

type RoomResponse_RoomClosed struct {
	RoomClosed *ResponseRoomClosed `protobuf:"bytes,3,opt,name=room_closed,json=roomClosed,proto3,oneof"`
}

type RoomResponse_GameEnd struct {
	GameEnd *ResponseGameEnd `protobuf:"bytes,8,opt,name=game_end,json=gameEnd,proto3,oneof"` // 游戏结束响应
}

type RoomResponse_Error struct {
	Error *ResponseErrorMessage `protobuf:"bytes,4,opt,name=error,proto3,oneof"`
}

type RoomResponse_UpdateReadyCount struct {
	UpdateReadyCount *ResponseUpdateReadyCount `protobuf:"bytes,5,opt,name=update_ready_count,json=updateReadyCount,proto3,oneof"`
}

type RoomResponse_AllReady struct {
	AllReady *ResponseAllReady `protobuf:"bytes,6,opt,name=all_ready,json=allReady,proto3,oneof"` // 所有玩家准备完毕
}

type RoomResponse_AllLoaded struct {
	AllLoaded *ResponseAllLoaded `protobuf:"bytes,7,opt,name=all_loaded,json=allLoaded,proto3,oneof"`
}

func (*RoomResponse_RoomInfo) isRoomResponse_Payload() {}

func (*RoomResponse_ChooseMap) isRoomResponse_Payload() {}

func (*RoomResponse_QuitChooseMap) isRoomResponse_Payload() {}

func (*RoomResponse_RoomClosed) isRoomResponse_Payload() {}

func (*RoomResponse_GameEnd) isRoomResponse_Payload() {}

func (*RoomResponse_Error) isRoomResponse_Payload() {}

func (*RoomResponse_UpdateReadyCount) isRoomResponse_Payload() {}

func (*RoomResponse_AllReady) isRoomResponse_Payload() {}

func (*RoomResponse_AllLoaded) isRoomResponse_Payload() {}

// 客户端加入时通知的信息， 或者广播给所有客户端的信息
type ResponseRoomInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 房间 ID
	RoomId uint32 `protobuf:"varint,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	// 房主 ID
	LordId uint32 `protobuf:"varint,2,opt,name=lord_id,json=lordId,proto3" json:"lord_id,omitempty"`
	// 告诉客户端，你的id是什么
	MyId uint32 `protobuf:"varint,3,opt,name=my_id,json=myId,proto3" json:"my_id,omitempty"`
	// 房间内玩家情况
	// json 字段
	Peers         string `protobuf:"bytes,4,opt,name=peers,proto3" json:"peers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResponseRoomInfo) Reset() {
	*x = ResponseRoomInfo{}
	mi := &file_response_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResponseRoomInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseRoomInfo) ProtoMessage() {}

func (x *ResponseRoomInfo) ProtoReflect() protoreflect.Message {
	mi := &file_response_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseRoomInfo.ProtoReflect.Descriptor instead.
func (*ResponseRoomInfo) Descriptor() ([]byte, []int) {
	return file_response_proto_rawDescGZIP(), []int{5}
}

func (x *ResponseRoomInfo) GetRoomId() uint32 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *ResponseRoomInfo) GetLordId() uint32 {
	if x != nil {
		return x.LordId
	}
	return 0
}

func (x *ResponseRoomInfo) GetMyId() uint32 {
	if x != nil {
		return x.MyId
	}
	return 0
}

func (x *ResponseRoomInfo) GetPeers() string {
	if x != nil {
		return x.Peers
	}
	return ""
}

// 已经选择了地图
// 通知客户端进入选卡阶段
type ResponseChooseMap struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChapterId     uint32                 `protobuf:"varint,1,opt,name=chapter_id,json=chapterId,proto3" json:"chapter_id,omitempty"`
	StageId       uint32                 `protobuf:"varint,2,opt,name=stage_id,json=stageId,proto3" json:"stage_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResponseChooseMap) Reset() {
	*x = ResponseChooseMap{}
	mi := &file_response_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResponseChooseMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseChooseMap) ProtoMessage() {}

func (x *ResponseChooseMap) ProtoReflect() protoreflect.Message {
	mi := &file_response_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseChooseMap.ProtoReflect.Descriptor instead.
func (*ResponseChooseMap) Descriptor() ([]byte, []int) {
	return file_response_proto_rawDescGZIP(), []int{6}
}

func (x *ResponseChooseMap) GetChapterId() uint32 {
	if x != nil {
		return x.ChapterId
	}
	return 0
}

func (x *ResponseChooseMap) GetStageId() uint32 {
	if x != nil {
		return x.StageId
	}
	return 0
}

// 退出选卡阶段
type ResponseQuitChooseMap struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResponseQuitChooseMap) Reset() {
	*x = ResponseQuitChooseMap{}
	mi := &file_response_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResponseQuitChooseMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseQuitChooseMap) ProtoMessage() {}

func (x *ResponseQuitChooseMap) ProtoReflect() protoreflect.Message {
	mi := &file_response_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseQuitChooseMap.ProtoReflect.Descriptor instead.
func (*ResponseQuitChooseMap) Descriptor() ([]byte, []int) {
	return file_response_proto_rawDescGZIP(), []int{7}
}

// 更新已经准备的人数
type ResponseUpdateReadyCount struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Count          uint32                 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`                                           // 已经准备的人数
	AllPlayerCount uint32                 `protobuf:"varint,2,opt,name=all_player_count,json=allPlayerCount,proto3" json:"all_player_count,omitempty"` // 房间内总人数
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ResponseUpdateReadyCount) Reset() {
	*x = ResponseUpdateReadyCount{}
	mi := &file_response_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResponseUpdateReadyCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseUpdateReadyCount) ProtoMessage() {}

func (x *ResponseUpdateReadyCount) ProtoReflect() protoreflect.Message {
	mi := &file_response_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseUpdateReadyCount.ProtoReflect.Descriptor instead.
func (*ResponseUpdateReadyCount) Descriptor() ([]byte, []int) {
	return file_response_proto_rawDescGZIP(), []int{8}
}

func (x *ResponseUpdateReadyCount) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ResponseUpdateReadyCount) GetAllPlayerCount() uint32 {
	if x != nil {
		return x.AllPlayerCount
	}
	return 0
}

// 告知所有玩家， 所有玩家已经全部准备， 可以开始Load游戏
type ResponseAllReady struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 房间内总人数
	AllPlayerCount uint32 `protobuf:"varint,1,opt,name=all_player_count,json=allPlayerCount,proto3" json:"all_player_count,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ResponseAllReady) Reset() {
	*x = ResponseAllReady{}
	mi := &file_response_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResponseAllReady) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseAllReady) ProtoMessage() {}

func (x *ResponseAllReady) ProtoReflect() protoreflect.Message {
	mi := &file_response_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseAllReady.ProtoReflect.Descriptor instead.
func (*ResponseAllReady) Descriptor() ([]byte, []int) {
	return file_response_proto_rawDescGZIP(), []int{9}
}

func (x *ResponseAllReady) GetAllPlayerCount() uint32 {
	if x != nil {
		return x.AllPlayerCount
	}
	return 0
}

// 告知所有玩家， 所有玩家已经loaded， 可以开始InGame游戏
// 客户端接受后
// 1. 做地图的特殊操作（比如预制植物）
// 2. 置客户端的当前帧号为1
// 3. 他们的下一次ack_id会是0
// 服务端
// 初始默认所有客户端都ack了0
// 置 “发送给客户端的下一帧” 为1
type ResponseAllLoaded struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// seed 不可以是负数，用 int32
	Seed          int32 `protobuf:"varint,1,opt,name=seed,proto3" json:"seed,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResponseAllLoaded) Reset() {
	*x = ResponseAllLoaded{}
	mi := &file_response_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResponseAllLoaded) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseAllLoaded) ProtoMessage() {}

func (x *ResponseAllLoaded) ProtoReflect() protoreflect.Message {
	mi := &file_response_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseAllLoaded.ProtoReflect.Descriptor instead.
func (*ResponseAllLoaded) Descriptor() ([]byte, []int) {
	return file_response_proto_rawDescGZIP(), []int{10}
}

func (x *ResponseAllLoaded) GetSeed() int32 {
	if x != nil {
		return x.Seed
	}
	return 0
}

// 本局游戏结束（客户端要判断在InGame才会结算）
type ResponseGameEnd struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GameResult    uint32                 `protobuf:"varint,1,opt,name=game_result,json=gameResult,proto3" json:"game_result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResponseGameEnd) Reset() {
	*x = ResponseGameEnd{}
	mi := &file_response_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResponseGameEnd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseGameEnd) ProtoMessage() {}

func (x *ResponseGameEnd) ProtoReflect() protoreflect.Message {
	mi := &file_response_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseGameEnd.ProtoReflect.Descriptor instead.
func (*ResponseGameEnd) Descriptor() ([]byte, []int) {
	return file_response_proto_rawDescGZIP(), []int{11}
}

func (x *ResponseGameEnd) GetGameResult() uint32 {
	if x != nil {
		return x.GameResult
	}
	return 0
}

// 房间关闭响应
type ResponseRoomClosed struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResponseRoomClosed) Reset() {
	*x = ResponseRoomClosed{}
	mi := &file_response_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResponseRoomClosed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseRoomClosed) ProtoMessage() {}

func (x *ResponseRoomClosed) ProtoReflect() protoreflect.Message {
	mi := &file_response_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseRoomClosed.ProtoReflect.Descriptor instead.
func (*ResponseRoomClosed) Descriptor() ([]byte, []int) {
	return file_response_proto_rawDescGZIP(), []int{12}
}

func (x *ResponseRoomClosed) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 游戏内，包含所有可能的响应类型
// 客户端在接收到服务器帧后会解析list
// 如果list中有operation， 并且uid是自己
// 那么会根据此次响应的frame_id和客户端当前本地帧序号计算偏差
// 未来会根据偏差来调整process_frame_id
type InGameResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 此帧序号， 从0起
	FrameId uint32 `protobuf:"varint,1,opt,name=frame_id,json=frameId,proto3" json:"frame_id,omitempty"`
	// 本帧所有转发给客户端的操作列表
	// 客户端需要自行提取， 未来的几帧中会做哪些操作
	Operations    []*InGameOperation `protobuf:"bytes,2,rep,name=operations,proto3" json:"operations,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InGameResponse) Reset() {
	*x = InGameResponse{}
	mi := &file_response_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InGameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InGameResponse) ProtoMessage() {}

func (x *InGameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_response_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InGameResponse.ProtoReflect.Descriptor instead.
func (*InGameResponse) Descriptor() ([]byte, []int) {
	return file_response_proto_rawDescGZIP(), []int{13}
}

func (x *InGameResponse) GetFrameId() uint32 {
	if x != nil {
		return x.FrameId
	}
	return 0
}

func (x *InGameResponse) GetOperations() []*InGameOperation {
	if x != nil {
		return x.Operations
	}
	return nil
}

// 游戏内单个操作的封装
type InGameOperation struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 此操作应该在哪一帧时进行
	// 服务端转发的最小process_frame_id应该恰好等于服务端要求客户端渲染的下一frame_id
	// 服务端不会因为这个字段的原因而推迟此operation的转发
	// 而是尽职的立刻转发， 从而便于客户端计算自己的偏差
	ProcessFrameId uint32 `protobuf:"varint,1,opt,name=process_frame_id,json=processFrameId,proto3" json:"process_frame_id,omitempty"`
	// 此操作列表在帧中处理的序号，数字越小，越先处理
	OperationIndex uint32 `protobuf:"varint,2,opt,name=operation_index,json=operationIndex,proto3" json:"operation_index,omitempty"`
	// Types that are valid to be assigned to Payload:
	//
	//	*InGameOperation_CardPlant
	//	*InGameOperation_RemovePlant
	//	*InGameOperation_UseStarShards
	//	*InGameOperation_GameEvent
	//	*InGameOperation_Error
	Payload       isInGameOperation_Payload `protobuf_oneof:"payload"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InGameOperation) Reset() {
	*x = InGameOperation{}
	mi := &file_response_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InGameOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InGameOperation) ProtoMessage() {}

func (x *InGameOperation) ProtoReflect() protoreflect.Message {
	mi := &file_response_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InGameOperation.ProtoReflect.Descriptor instead.
func (*InGameOperation) Descriptor() ([]byte, []int) {
	return file_response_proto_rawDescGZIP(), []int{14}
}

func (x *InGameOperation) GetProcessFrameId() uint32 {
	if x != nil {
		return x.ProcessFrameId
	}
	return 0
}

func (x *InGameOperation) GetOperationIndex() uint32 {
	if x != nil {
		return x.OperationIndex
	}
	return 0
}

func (x *InGameOperation) GetPayload() isInGameOperation_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *InGameOperation) GetCardPlant() *ResponseCardPlant {
	if x != nil {
		if x, ok := x.Payload.(*InGameOperation_CardPlant); ok {
			return x.CardPlant
		}
	}
	return nil
}

func (x *InGameOperation) GetRemovePlant() *ResponseRemovePlant {
	if x != nil {
		if x, ok := x.Payload.(*InGameOperation_RemovePlant); ok {
			return x.RemovePlant
		}
	}
	return nil
}

func (x *InGameOperation) GetUseStarShards() *ResponseUseStarShards {
	if x != nil {
		if x, ok := x.Payload.(*InGameOperation_UseStarShards); ok {
			return x.UseStarShards
		}
	}
	return nil
}

func (x *InGameOperation) GetGameEvent() *ResponseGameEvent {
	if x != nil {
		if x, ok := x.Payload.(*InGameOperation_GameEvent); ok {
			return x.GameEvent
		}
	}
	return nil
}

func (x *InGameOperation) GetError() *ResponseErrorMessage {
	if x != nil {
		if x, ok := x.Payload.(*InGameOperation_Error); ok {
			return x.Error
		}
	}
	return nil
}

type isInGameOperation_Payload interface {
	isInGameOperation_Payload()
}

type InGameOperation_CardPlant struct {
	CardPlant *ResponseCardPlant `protobuf:"bytes,3,opt,name=card_plant,json=cardPlant,proto3,oneof"`
}

type InGameOperation_RemovePlant struct {
	RemovePlant *ResponseRemovePlant `protobuf:"bytes,4,opt,name=remove_plant,json=removePlant,proto3,oneof"`
}

type InGameOperation_UseStarShards struct {
	UseStarShards *ResponseUseStarShards `protobuf:"bytes,5,opt,name=use_star_shards,json=useStarShards,proto3,oneof"`
}

type InGameOperation_GameEvent struct {
	GameEvent *ResponseGameEvent `protobuf:"bytes,6,opt,name=game_event,json=gameEvent,proto3,oneof"`
}

type InGameOperation_Error struct {
	Error *ResponseErrorMessage `protobuf:"bytes,7,opt,name=error,proto3,oneof"`
}

func (*InGameOperation_CardPlant) isInGameOperation_Payload() {}

func (*InGameOperation_RemovePlant) isInGameOperation_Payload() {}

func (*InGameOperation_UseStarShards) isInGameOperation_Payload() {}

func (*InGameOperation_GameEvent) isInGameOperation_Payload() {}

func (*InGameOperation_Error) isInGameOperation_Payload() {}

// 格子操作
type ResponseGridOperation struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 操作者
	Uid uint32 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	// 操作的格子列
	Col uint32 `protobuf:"varint,2,opt,name=col,proto3" json:"col,omitempty"`
	// 操作的格子行
	Row           uint32 `protobuf:"varint,3,opt,name=row,proto3" json:"row,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResponseGridOperation) Reset() {
	*x = ResponseGridOperation{}
	mi := &file_response_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResponseGridOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseGridOperation) ProtoMessage() {}

func (x *ResponseGridOperation) ProtoReflect() protoreflect.Message {
	mi := &file_response_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseGridOperation.ProtoReflect.Descriptor instead.
func (*ResponseGridOperation) Descriptor() ([]byte, []int) {
	return file_response_proto_rawDescGZIP(), []int{15}
}

func (x *ResponseGridOperation) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *ResponseGridOperation) GetCol() uint32 {
	if x != nil {
		return x.Col
	}
	return 0
}

func (x *ResponseGridOperation) GetRow() uint32 {
	if x != nil {
		return x.Row
	}
	return 0
}

// 广播卡牌种植
type ResponseCardPlant struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Pid   uint32                 `protobuf:"varint,1,opt,name=pid,proto3" json:"pid,omitempty"`
	Level uint32                 `protobuf:"varint,2,opt,name=level,proto3" json:"level,omitempty"`
	// 消耗
	Cost          int32                  `protobuf:"varint,3,opt,name=cost,proto3" json:"cost,omitempty"`
	Base          *ResponseGridOperation `protobuf:"bytes,5,opt,name=base,proto3" json:"base,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResponseCardPlant) Reset() {
	*x = ResponseCardPlant{}
	mi := &file_response_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResponseCardPlant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseCardPlant) ProtoMessage() {}

func (x *ResponseCardPlant) ProtoReflect() protoreflect.Message {
	mi := &file_response_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseCardPlant.ProtoReflect.Descriptor instead.
func (*ResponseCardPlant) Descriptor() ([]byte, []int) {
	return file_response_proto_rawDescGZIP(), []int{16}
}

func (x *ResponseCardPlant) GetPid() uint32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *ResponseCardPlant) GetLevel() uint32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *ResponseCardPlant) GetCost() int32 {
	if x != nil {
		return x.Cost
	}
	return 0
}

func (x *ResponseCardPlant) GetBase() *ResponseGridOperation {
	if x != nil {
		return x.Base
	}
	return nil
}

type ResponseRemovePlant struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 使用 ResponseGridOperation 作为基础消息
	Base          *ResponseGridOperation `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	Pid           uint32                 `protobuf:"varint,2,opt,name=pid,proto3" json:"pid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResponseRemovePlant) Reset() {
	*x = ResponseRemovePlant{}
	mi := &file_response_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResponseRemovePlant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseRemovePlant) ProtoMessage() {}

func (x *ResponseRemovePlant) ProtoReflect() protoreflect.Message {
	mi := &file_response_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseRemovePlant.ProtoReflect.Descriptor instead.
func (*ResponseRemovePlant) Descriptor() ([]byte, []int) {
	return file_response_proto_rawDescGZIP(), []int{17}
}

func (x *ResponseRemovePlant) GetBase() *ResponseGridOperation {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *ResponseRemovePlant) GetPid() uint32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

type ResponseUseStarShards struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Pid   uint32                 `protobuf:"varint,1,opt,name=pid,proto3" json:"pid,omitempty"`
	// 消耗
	Cost          int32                  `protobuf:"varint,2,opt,name=cost,proto3" json:"cost,omitempty"`
	Base          *ResponseGridOperation `protobuf:"bytes,4,opt,name=base,proto3" json:"base,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResponseUseStarShards) Reset() {
	*x = ResponseUseStarShards{}
	mi := &file_response_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResponseUseStarShards) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseUseStarShards) ProtoMessage() {}

func (x *ResponseUseStarShards) ProtoReflect() protoreflect.Message {
	mi := &file_response_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseUseStarShards.ProtoReflect.Descriptor instead.
func (*ResponseUseStarShards) Descriptor() ([]byte, []int) {
	return file_response_proto_rawDescGZIP(), []int{18}
}

func (x *ResponseUseStarShards) GetPid() uint32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *ResponseUseStarShards) GetCost() int32 {
	if x != nil {
		return x.Cost
	}
	return 0
}

func (x *ResponseUseStarShards) GetBase() *ResponseGridOperation {
	if x != nil {
		return x.Base
	}
	return nil
}

type ResponseGameEvent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 事件类型
	// 0x4000 - 0x4FFF 为本地游戏事件
	EventType uint32 `protobuf:"varint,1,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty"`
	// 事件base64,自行解析
	Message       string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResponseGameEvent) Reset() {
	*x = ResponseGameEvent{}
	mi := &file_response_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResponseGameEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseGameEvent) ProtoMessage() {}

func (x *ResponseGameEvent) ProtoReflect() protoreflect.Message {
	mi := &file_response_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseGameEvent.ProtoReflect.Descriptor instead.
func (*ResponseGameEvent) Descriptor() ([]byte, []int) {
	return file_response_proto_rawDescGZIP(), []int{19}
}

func (x *ResponseGameEvent) GetEventType() uint32 {
	if x != nil {
		return x.EventType
	}
	return 0
}

func (x *ResponseGameEvent) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_response_proto protoreflect.FileDescriptor

const file_response_proto_rawDesc = "" +
	"\n" +
	"\x0eresponse.proto\x12\bmessages\"0\n" +
	"\x14ResponseErrorMessage\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\"\xb9\x01\n" +
	"\rLobbyResponse\x12O\n" +
	"\x11join_room_success\x18\x01 \x01(\v2!.messages.ResponseJoinRoomSuccessH\x00R\x0fjoinRoomSuccess\x12L\n" +
	"\x10join_room_failed\x18\x02 \x01(\v2 .messages.ResponseJoinRoomFailedH\x00R\x0ejoinRoomFailedB\t\n" +
	"\apayload\"2\n" +
	"\x16ResponseJoinRoomFailed\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\"s\n" +
	"\x17ResponseJoinRoomSuccess\x12\x17\n" +
	"\aroom_id\x18\x01 \x01(\rR\x06roomId\x12\x13\n" +
	"\x05my_id\x18\x02 \x01(\rR\x04myId\x12\x10\n" +
	"\x03key\x18\x04 \x01(\tR\x03key\x12\x18\n" +
	"\amessage\x18\x05 \x01(\tR\amessage\"\xdb\x04\n" +
	"\fRoomResponse\x129\n" +
	"\troom_info\x18\x01 \x01(\v2\x1a.messages.ResponseRoomInfoH\x00R\broomInfo\x12<\n" +
	"\n" +
	"choose_map\x18\x02 \x01(\v2\x1b.messages.ResponseChooseMapH\x00R\tchooseMap\x12I\n" +
	"\x0fquit_choose_map\x18\t \x01(\v2\x1f.messages.ResponseQuitChooseMapH\x00R\rquitChooseMap\x12?\n" +
	"\vroom_closed\x18\x03 \x01(\v2\x1c.messages.ResponseRoomClosedH\x00R\n" +
	"roomClosed\x126\n" +
	"\bgame_end\x18\b \x01(\v2\x19.messages.ResponseGameEndH\x00R\agameEnd\x126\n" +
	"\x05error\x18\x04 \x01(\v2\x1e.messages.ResponseErrorMessageH\x00R\x05error\x12R\n" +
	"\x12update_ready_count\x18\x05 \x01(\v2\".messages.ResponseUpdateReadyCountH\x00R\x10updateReadyCount\x129\n" +
	"\tall_ready\x18\x06 \x01(\v2\x1a.messages.ResponseAllReadyH\x00R\ballReady\x12<\n" +
	"\n" +
	"all_loaded\x18\a \x01(\v2\x1b.messages.ResponseAllLoadedH\x00R\tallLoadedB\t\n" +
	"\apayload\"o\n" +
	"\x10ResponseRoomInfo\x12\x17\n" +
	"\aroom_id\x18\x01 \x01(\rR\x06roomId\x12\x17\n" +
	"\alord_id\x18\x02 \x01(\rR\x06lordId\x12\x13\n" +
	"\x05my_id\x18\x03 \x01(\rR\x04myId\x12\x14\n" +
	"\x05peers\x18\x04 \x01(\tR\x05peers\"M\n" +
	"\x11ResponseChooseMap\x12\x1d\n" +
	"\n" +
	"chapter_id\x18\x01 \x01(\rR\tchapterId\x12\x19\n" +
	"\bstage_id\x18\x02 \x01(\rR\astageId\"\x17\n" +
	"\x15ResponseQuitChooseMap\"Z\n" +
	"\x18ResponseUpdateReadyCount\x12\x14\n" +
	"\x05count\x18\x01 \x01(\rR\x05count\x12(\n" +
	"\x10all_player_count\x18\x02 \x01(\rR\x0eallPlayerCount\"<\n" +
	"\x10ResponseAllReady\x12(\n" +
	"\x10all_player_count\x18\x01 \x01(\rR\x0eallPlayerCount\"'\n" +
	"\x11ResponseAllLoaded\x12\x12\n" +
	"\x04seed\x18\x01 \x01(\x05R\x04seed\"2\n" +
	"\x0fResponseGameEnd\x12\x1f\n" +
	"\vgame_result\x18\x01 \x01(\rR\n" +
	"gameResult\".\n" +
	"\x12ResponseRoomClosed\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\"f\n" +
	"\x0eInGameResponse\x12\x19\n" +
	"\bframe_id\x18\x01 \x01(\rR\aframeId\x129\n" +
	"\n" +
	"operations\x18\x02 \x03(\v2\x19.messages.InGameOperationR\n" +
	"operations\"\xb2\x03\n" +
	"\x0fInGameOperation\x12(\n" +
	"\x10process_frame_id\x18\x01 \x01(\rR\x0eprocessFrameId\x12'\n" +
	"\x0foperation_index\x18\x02 \x01(\rR\x0eoperationIndex\x12<\n" +
	"\n" +
	"card_plant\x18\x03 \x01(\v2\x1b.messages.ResponseCardPlantH\x00R\tcardPlant\x12B\n" +
	"\fremove_plant\x18\x04 \x01(\v2\x1d.messages.ResponseRemovePlantH\x00R\vremovePlant\x12I\n" +
	"\x0fuse_star_shards\x18\x05 \x01(\v2\x1f.messages.ResponseUseStarShardsH\x00R\ruseStarShards\x12<\n" +
	"\n" +
	"game_event\x18\x06 \x01(\v2\x1b.messages.ResponseGameEventH\x00R\tgameEvent\x126\n" +
	"\x05error\x18\a \x01(\v2\x1e.messages.ResponseErrorMessageH\x00R\x05errorB\t\n" +
	"\apayload\"M\n" +
	"\x15ResponseGridOperation\x12\x10\n" +
	"\x03uid\x18\x01 \x01(\rR\x03uid\x12\x10\n" +
	"\x03col\x18\x02 \x01(\rR\x03col\x12\x10\n" +
	"\x03row\x18\x03 \x01(\rR\x03row\"\x84\x01\n" +
	"\x11ResponseCardPlant\x12\x10\n" +
	"\x03pid\x18\x01 \x01(\rR\x03pid\x12\x14\n" +
	"\x05level\x18\x02 \x01(\rR\x05level\x12\x12\n" +
	"\x04cost\x18\x03 \x01(\x05R\x04cost\x123\n" +
	"\x04base\x18\x05 \x01(\v2\x1f.messages.ResponseGridOperationR\x04base\"\\\n" +
	"\x13ResponseRemovePlant\x123\n" +
	"\x04base\x18\x01 \x01(\v2\x1f.messages.ResponseGridOperationR\x04base\x12\x10\n" +
	"\x03pid\x18\x02 \x01(\rR\x03pid\"r\n" +
	"\x15ResponseUseStarShards\x12\x10\n" +
	"\x03pid\x18\x01 \x01(\rR\x03pid\x12\x12\n" +
	"\x04cost\x18\x02 \x01(\x05R\x04cost\x123\n" +
	"\x04base\x18\x04 \x01(\v2\x1f.messages.ResponseGridOperationR\x04base\"L\n" +
	"\x11ResponseGameEvent\x12\x1d\n" +
	"\n" +
	"event_type\x18\x01 \x01(\rR\teventType\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessageB\rZ\v./;messagesb\x06proto3"

var (
	file_response_proto_rawDescOnce sync.Once
	file_response_proto_rawDescData []byte
)

func file_response_proto_rawDescGZIP() []byte {
	file_response_proto_rawDescOnce.Do(func() {
		file_response_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_response_proto_rawDesc), len(file_response_proto_rawDesc)))
	})
	return file_response_proto_rawDescData
}

var file_response_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_response_proto_goTypes = []any{
	(*ResponseErrorMessage)(nil),     // 0: messages.ResponseErrorMessage
	(*LobbyResponse)(nil),            // 1: messages.LobbyResponse
	(*ResponseJoinRoomFailed)(nil),   // 2: messages.ResponseJoinRoomFailed
	(*ResponseJoinRoomSuccess)(nil),  // 3: messages.ResponseJoinRoomSuccess
	(*RoomResponse)(nil),             // 4: messages.RoomResponse
	(*ResponseRoomInfo)(nil),         // 5: messages.ResponseRoomInfo
	(*ResponseChooseMap)(nil),        // 6: messages.ResponseChooseMap
	(*ResponseQuitChooseMap)(nil),    // 7: messages.ResponseQuitChooseMap
	(*ResponseUpdateReadyCount)(nil), // 8: messages.ResponseUpdateReadyCount
	(*ResponseAllReady)(nil),         // 9: messages.ResponseAllReady
	(*ResponseAllLoaded)(nil),        // 10: messages.ResponseAllLoaded
	(*ResponseGameEnd)(nil),          // 11: messages.ResponseGameEnd
	(*ResponseRoomClosed)(nil),       // 12: messages.ResponseRoomClosed
	(*InGameResponse)(nil),           // 13: messages.InGameResponse
	(*InGameOperation)(nil),          // 14: messages.InGameOperation
	(*ResponseGridOperation)(nil),    // 15: messages.ResponseGridOperation
	(*ResponseCardPlant)(nil),        // 16: messages.ResponseCardPlant
	(*ResponseRemovePlant)(nil),      // 17: messages.ResponseRemovePlant
	(*ResponseUseStarShards)(nil),    // 18: messages.ResponseUseStarShards
	(*ResponseGameEvent)(nil),        // 19: messages.ResponseGameEvent
}
var file_response_proto_depIdxs = []int32{
	3,  // 0: messages.LobbyResponse.join_room_success:type_name -> messages.ResponseJoinRoomSuccess
	2,  // 1: messages.LobbyResponse.join_room_failed:type_name -> messages.ResponseJoinRoomFailed
	5,  // 2: messages.RoomResponse.room_info:type_name -> messages.ResponseRoomInfo
	6,  // 3: messages.RoomResponse.choose_map:type_name -> messages.ResponseChooseMap
	7,  // 4: messages.RoomResponse.quit_choose_map:type_name -> messages.ResponseQuitChooseMap
	12, // 5: messages.RoomResponse.room_closed:type_name -> messages.ResponseRoomClosed
	11, // 6: messages.RoomResponse.game_end:type_name -> messages.ResponseGameEnd
	0,  // 7: messages.RoomResponse.error:type_name -> messages.ResponseErrorMessage
	8,  // 8: messages.RoomResponse.update_ready_count:type_name -> messages.ResponseUpdateReadyCount
	9,  // 9: messages.RoomResponse.all_ready:type_name -> messages.ResponseAllReady
	10, // 10: messages.RoomResponse.all_loaded:type_name -> messages.ResponseAllLoaded
	14, // 11: messages.InGameResponse.operations:type_name -> messages.InGameOperation
	16, // 12: messages.InGameOperation.card_plant:type_name -> messages.ResponseCardPlant
	17, // 13: messages.InGameOperation.remove_plant:type_name -> messages.ResponseRemovePlant
	18, // 14: messages.InGameOperation.use_star_shards:type_name -> messages.ResponseUseStarShards
	19, // 15: messages.InGameOperation.game_event:type_name -> messages.ResponseGameEvent
	0,  // 16: messages.InGameOperation.error:type_name -> messages.ResponseErrorMessage
	15, // 17: messages.ResponseCardPlant.base:type_name -> messages.ResponseGridOperation
	15, // 18: messages.ResponseRemovePlant.base:type_name -> messages.ResponseGridOperation
	15, // 19: messages.ResponseUseStarShards.base:type_name -> messages.ResponseGridOperation
	20, // [20:20] is the sub-list for method output_type
	20, // [20:20] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_response_proto_init() }
func file_response_proto_init() {
	if File_response_proto != nil {
		return
	}
	file_response_proto_msgTypes[1].OneofWrappers = []any{
		(*LobbyResponse_JoinRoomSuccess)(nil),
		(*LobbyResponse_JoinRoomFailed)(nil),
	}
	file_response_proto_msgTypes[4].OneofWrappers = []any{
		(*RoomResponse_RoomInfo)(nil),
		(*RoomResponse_ChooseMap)(nil),
		(*RoomResponse_QuitChooseMap)(nil),
		(*RoomResponse_RoomClosed)(nil),
		(*RoomResponse_GameEnd)(nil),
		(*RoomResponse_Error)(nil),
		(*RoomResponse_UpdateReadyCount)(nil),
		(*RoomResponse_AllReady)(nil),
		(*RoomResponse_AllLoaded)(nil),
	}
	file_response_proto_msgTypes[14].OneofWrappers = []any{
		(*InGameOperation_CardPlant)(nil),
		(*InGameOperation_RemovePlant)(nil),
		(*InGameOperation_UseStarShards)(nil),
		(*InGameOperation_GameEvent)(nil),
		(*InGameOperation_Error)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_response_proto_rawDesc), len(file_response_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_response_proto_goTypes,
		DependencyIndexes: file_response_proto_depIdxs,
		MessageInfos:      file_response_proto_msgTypes,
	}.Build()
	File_response_proto = out.File
	file_response_proto_goTypes = nil
	file_response_proto_depIdxs = nil
}
